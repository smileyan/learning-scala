-- == join_dump

A = LOAD 'input/pig/join/A' AS (id:int, name:chararray);
B = LOAD 'input/pig/join/B' AS (name:chararray, id:int);

-- vv join_dump
DUMP A;
DUMP B;
-- ^^ join_dump

-- vv join_join
C = JOIN A BY $0, B BY $1;
DUMP C;
-- ^^ join_join

-- vv join_frj  fragment replicate join
C = JOIN A BY $0, B BY $1 USING 'replicated';
DUMP C;
-- ^^ join_frj

-- vv join_left_outer
C = JOIN A BY $0 LEFT OUTER, B BY $1;
DUMP C;
-- ^^ join_left_outer

-- vv join_cogroup
D = COGROUP A BY $0, B BY $1;
DUMP D;
D = COGROUP A BY $0 OUTER, B BY $1 OUTER;
-- ^^ join_cogroup

-- vv join_cogroup_inner
E = COGROUP A BY $0 INNER, B BY $1;
DUMP E;
-- ^^ join_cogroup_inner

-- VV JOIN_COGROUP_FLATTEN
F = FOREACH E GENERATE FLATTEN(A), B.$0;
DUMP F;
-- ^^ JOIN_COGROUP_FLATTEN

-- VV JOIN COGROUP JOIN
G = COGROUP A BY $0 INNER, B BY $1 INNER;
H = FOREACH G GENERATE FLATTEN($1), FLATTEN($2);
DUMP H;
-- ^^ JOIN COGROUP JOIN